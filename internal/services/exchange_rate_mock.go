// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gw-exchanger/internal/services/exchange_rate.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/sbilibin2017/gw-exchanger/internal/models"
)

// MockExchangeRateReader is a mock of ExchangeRateReader interface.
type MockExchangeRateReader struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRateReaderMockRecorder
}

// MockExchangeRateReaderMockRecorder is the mock recorder for MockExchangeRateReader.
type MockExchangeRateReaderMockRecorder struct {
	mock *MockExchangeRateReader
}

// NewMockExchangeRateReader creates a new mock instance.
func NewMockExchangeRateReader(ctrl *gomock.Controller) *MockExchangeRateReader {
	mock := &MockExchangeRateReader{ctrl: ctrl}
	mock.recorder = &MockExchangeRateReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeRateReader) EXPECT() *MockExchangeRateReaderMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockExchangeRateReader) Get(ctx context.Context, fromCurrency, toCurrency string) (*float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, fromCurrency, toCurrency)
	ret0, _ := ret[0].(*float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockExchangeRateReaderMockRecorder) Get(ctx, fromCurrency, toCurrency any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockExchangeRateReader)(nil).Get), ctx, fromCurrency, toCurrency)
}

// List mocks base method.
func (m *MockExchangeRateReader) List(ctx context.Context) ([]models.ExchangeRateDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]models.ExchangeRateDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockExchangeRateReaderMockRecorder) List(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockExchangeRateReader)(nil).List), ctx)
}
