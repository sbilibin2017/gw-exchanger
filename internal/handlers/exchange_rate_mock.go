// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gw-exchanger/internal/handlers/exchange_rate.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/sbilibin2017/gw-exchanger/internal/models"
)

// MockExchangeRateService is a mock of ExchangeRateService interface.
type MockExchangeRateService struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRateServiceMockRecorder
}

// MockExchangeRateServiceMockRecorder is the mock recorder for MockExchangeRateService.
type MockExchangeRateServiceMockRecorder struct {
	mock *MockExchangeRateService
}

// NewMockExchangeRateService creates a new mock instance.
func NewMockExchangeRateService(ctrl *gomock.Controller) *MockExchangeRateService {
	mock := &MockExchangeRateService{ctrl: ctrl}
	mock.recorder = &MockExchangeRateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeRateService) EXPECT() *MockExchangeRateServiceMockRecorder {
	return m.recorder
}

// GetAllExchangeRates mocks base method.
func (m *MockExchangeRateService) GetAllExchangeRates(ctx context.Context) ([]models.ExchangeRate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllExchangeRates", ctx)
	ret0, _ := ret[0].([]models.ExchangeRate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllExchangeRates indicates an expected call of GetAllExchangeRates.
func (mr *MockExchangeRateServiceMockRecorder) GetAllExchangeRates(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllExchangeRates", reflect.TypeOf((*MockExchangeRateService)(nil).GetAllExchangeRates), ctx)
}

// GetExchangeRate mocks base method.
func (m *MockExchangeRateService) GetExchangeRate(ctx context.Context, fromCurrency, toCurrency string) (*float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRate", ctx, fromCurrency, toCurrency)
	ret0, _ := ret[0].(*float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate.
func (mr *MockExchangeRateServiceMockRecorder) GetExchangeRate(ctx, fromCurrency, toCurrency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockExchangeRateService)(nil).GetExchangeRate), ctx, fromCurrency, toCurrency)
}
